<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxTask_IAA.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAZwAAAAwCAYAAAAl6MwYAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        dAAAEnQB3mYfeAAAGdtJREFUeF7t3XVsdEUXBvD3DyQhOCSQYAkWIDgBgltwd3d3d3d3d3d3d3d3eHF3
        d+bLb9L5ct/Ltl3vbjtPctN29+rMOec5NrfDhv/4e+hry8go459//gnff/99uOWWW8L1118f3njjjfD3
        33/3fDtwcE933XVXuPzyy8Nrr70W73MoIM3HnXfeGY499thw1llnhccffzz8+uuvPXtkJPz000/hueee
        C/vss0948sknw48//tjzTUY7kAknIyMjI6MtyISTkZGRkdEWZMLJyMjIyGgLMuFkZGRkZLQFmXA6HIqa
        L7zwQrjqqqvCCSecEM4444zwwAMPhM8++yz8+++/PXu1H3/++Wf44IMPwlNPPRXef//98Ndff/V80zu+
        +OKL8NJLL4WXX345/PbbbwN6/xkZGe1HJpwOBWPMqDPo5557bthll13CiiuuGFZYYYWw/fbbhzvuuCP8
        /PPPPXu3F7/88kt455134j3oCHv++efDH3/80fNt73j33XfDbbfdFq655pp4jM6qodJJlpGRkQmnY8EQ
        f/fdd+H4448Pl112WYxotLk+8sgjYbXVVgsHHXRQNODthkjm9ddfD6effnq44oorao60fvjhh0ii7v+Z
        Z56J5JWRkTE0kAmng5FIR1rNOhfG/sMPPwy77rprOPXUU8PHH3/cs2f7gGBEKdZ7fPrppzEKqwWe6dtv
        vw3XXXdduPDCC2OKLafWMjKGBjLhdAEY5N9//z189NFH4corrwznnHNOeOKJJ0ZY2Gcf3990001hjz32
        CGussUbYf//9w6OPPhqPRVjffPNNXKi59957hy222CIceuihsZ6Sogx1lbfeeiuccsopYauttgqbbLJJ
        OOCAA8Ltt98ev0N4Dz30UDjzzDMj6RTrMIgHGTpWremxxx6LZOl8xx13XFyUiKxA+k2UdMwxx4Rbb711
        wFKDGRkZ7UUmnA4HomCcL7roorDbbruFbbbZJlx77bWRXIpQuNdYcNhhh8Vt2223jaRx8803R4OuYH/J
        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
</value>
  </data>
</root>